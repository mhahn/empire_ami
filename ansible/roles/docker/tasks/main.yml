# Setup the docker filesystem if a device exists
- stat: path=/dev/xvdh
  register: dev_xvdh
- filesystem: fstype=ext4 dev=/dev/xvdh
  when: dev_xvdh.stat.exists
  register: new_docker_fs
  notify:
    - restart_docker

- service: name=docker state=stopped
  when: new_docker_fs|changed
# Make absolutely sure aufs doesn't exist or docker freaks
# https://github.com/docker/docker/issues/14026
- shell: /bin/umount -t aufs -a -f
  ignore_errors: yes
  when: new_docker_fs|changed
- shell: /bin/umount -f /var/lib/docker/aufs
  ignore_errors: yes
  when: new_docker_fs|changed
# Ensure we don't have any left behind images on the old FS
- shell: /bin/rm -rf /var/lib/docker/*
  ignore_errors: yes
  when: new_docker_fs|changed
- mount: name=/var/lib/docker src=/dev/xvdh fstype=ext4 state=mounted
  when: new_docker_fs|changed
- file: path=/var/lib/docker/aufs state=absent
  ignore_errors: yes
  when: new_docker_fs|changed

- apt: name=linux-image-extra-{{ansible_kernel}}
  tags:
    - build_ami
- apt: name=linux-image-extra-virtual
  tags:
    - build_ami
- apt: name=apparmor
  tags:
    - build_ami
- apt: name=docker-engine=1.11.2-0~trusty
  tags:
    - build_ami

# Create docker_maid cron job
- copy: src=usr/sbin/docker_maid dest=/usr/sbin/docker_maid owner=root group=root mode=0755
  tags:
    - build_ami
- cron: name=docker_maid cron_file=docker_maid user=root minute="15" hour="2,10,18" job="/usr/sbin/docker_maid"
  tags:
    - build_ami
- name: Adding ubuntu to docker group
  user: name=ubuntu groups=docker append=yes
  tags:
    - build_ami

# Add docker defaults file to have docker use the docker host for dns
- template: src=etc/default/docker.default dest=/etc/default/docker mode=0644 owner=root group=root
  tags:
    - build_ami
  notify: restart_docker

- service: name=docker state=started
